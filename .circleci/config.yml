# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1
orbs:
    multirepo: dnephin/multirepo@0.0.7
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8u171-jdk
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
    
    steps:
      - checkout
      - multirepo/run-job-for-paths:
            paths:  Brg-booking-system/* ssl/*
            upstream_branch: HEAD^
            run_on_upstream: false
      - setup_remote_docker

      # Download and cache dependencies
      - restore_cache:
          keys:          
          - v1-dependencies-{{ checksum "~/repo/Brg-booking-system/pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
          
      - run:
          command: |
            pwd
            ls -al
            cd Brg-booking-system
            ls -al
            echo '^^^That should look familiar^^^'
            
      #- run: mvn dependency:go-offline            
            
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "~/repo/Brg-booking-system/pom.xml" }}                                          
            
      - run: "mvn package -f ~/repo/Brg-booking-system/pom.xml"
           
      # run tests!
      - run:
          command: |
            ls -al
            cp -R ~/repo/ssl ~/repo/Brg-booking-system/ssl
            cd ~/repo/Brg-booking-system             
            ls -al
            docker login -u anilramesh -p Infy@123
            docker build -t anilramesh/booking-api .
            docker push  anilramesh/booking-api
          name: "Build application Docker image"